# This is a basic workflow to help you get started with Actions
name: Maven Build and Release
# Controls when the action will run.
on:
  push:
    branches:
      - main
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This job builds the project using Maven and uploads the artifacts to GitHub releases
  build-and-release:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Sets up Java 17 environment
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      # Runs a single command using the runners shell
      - name: Build with Maven
        run: mvn clean package --quiet

      # Gets the version number from the pom.xml file
      - name: Get version
        id: get_version
        run: echo "::set-output name=version::$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)"
      - name: Is pre-release # 如果满足X.X.X就是false，否则是true
        id: is_pre_release
        run: echo "::set-output name=is_pre_release::$(if [[ ${{ steps.get_version.outputs.version }} =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then echo false; else echo true; fi)"
      # Creates a release using the version number
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: Release ${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: ${{ steps.is_pre_release.outputs.is_pre_release }}
      - name: find all jar(s) # 遍历每个模块中的target文件夹 找到 "模块名-当前版本.jar" 上传到release
        id: find_all_jar
        run: |
          mkdir tmp
          for module in $(ls -d */); do
            if [ -f "$module/target/${module}-${{ steps.get_version.outputs.version }}.jar" ]; then
              cp "$module/target/${module}-${{ steps.get_version.outputs.version }}.jar" "./tmp/${module}-${{ steps.get_version.outputs.version }}.jar"
            fi
          done
      # 上传文件并发布 Release
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{ steps.get_version.outputs.version }}"
          prerelease: ${{ steps.is_pre_release.outputs.is_pre_release }}
          title: "Release ${{ steps.get_version.outputs.version }}"
          files: |
            staging/*.jar