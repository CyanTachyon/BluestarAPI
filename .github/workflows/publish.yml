# This is a basic workflow to help you get started with Actions

name: Maven Build and Release

# Controls when the action will run.
on: [push]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This job builds the project using Maven and uploads the artifacts to GitHub releases
  build-and-release:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Sets up Java 17 environment
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      # Runs a single command using the runners shell
      - name: Build with Maven
        run: mvn clean package

      # Gets the version number from the pom.xml file
      - name: Get version
        id: get_version
        run: echo "::set-output name=version::$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)"

      # Creates a release using the version number
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: Release ${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false

      # Uploads each jar file in the target folders to the release
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./**/target/*-${{ steps.get_version.outputs.version }}.jar
          asset_name: ${{ github.repository }}-${{ steps.get_version.outputs.version }}.jar
          asset_content_type: application/zip
